<launch>
    <!-- 设置launch文件的参数 -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    
    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" default="worlds/empty.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <rosparam file="$(find dual_arm)/config/control.yaml" command="load" />
    <rosparam file="$(find dual_arm)/config/joint_state_controller.yaml" command="load" />
    <rosparam file="$(find dual_arm)/config/dual_arm.yaml" command="load" />

    <param name="robot_description" textfile="$(find dual_arm)/robot_description/urdf/original.urdf" />
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model mycar -param robot_description"  />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" />
    <!-- Start the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	args="joint_state_controller
    x_dir_controller
    y_dir_controller 
    z_dir_controller
    L_arm_controller/L_shoulder_pan_joint
    L_arm_controller/L_shoulder_lift_joint
    L_arm_controller/L_elbow_joint
    L_arm_controller/L_wrist_1_joint
    L_arm_controller/L_wrist_2_joint
    L_arm_controller/L_wrist_3_joint
    R_arm_controller/R_shoulder_pan_joint
    R_arm_controller/R_shoulder_lift_joint
    R_arm_controller/R_elbow_joint
    R_arm_controller/R_wrist_1_joint
    R_arm_controller/R_wrist_2_joint
    R_arm_controller/R_wrist_3_joint"/>

    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find dual_arm)/config/dual_arm.rviz" />

    <node pkg="optimal_traj" type="interactive_marker.py" name="interactive_pose_node" output="screen" />

    <node pkg="optimal_traj" type="trajectory" name="trajectory_node" output="screen" />

    <include file="$(find tactile_compliance)/launch/dynamics.launch"/>

</launch>